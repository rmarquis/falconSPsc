///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include "vu2.h"
#include "vu_priv.h"

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

//-----------------------------------------------------------------------------
// VuAssociationFilter
//-----------------------------------------------------------------------------

VuAssociationFilter::VuAssociationFilter(VU_ID association) : VuFilter()
{
	association_ = association;
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

VuAssociationFilter::VuAssociationFilter(VuAssociationFilter* other) : VuFilter(other)
{
	if (other) {
		association_ = other->association_;
	}
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

VuAssociationFilter::~VuAssociationFilter()
{
	// empty
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

VU_BOOL VuAssociationFilter::Test(VuEntity* ent)
{
	return static_cast<VU_BOOL>((ent->Association() == association_) ? TRUE : FALSE);
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

int VuAssociationFilter::Compare(VuEntity* ent1, VuEntity* ent2)
{
	return (int)ent1->Id() - (int)ent2->Id();
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

VuFilter *VuAssociationFilter::Copy()
{
	return new VuAssociationFilter(this);
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
